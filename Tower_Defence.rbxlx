<roblox version="4">
  <Item class="Lighting" referent="0">
    <Properties>
      <string name="Name">Lighting</string>
      <Color3 name="Ambient">
        <R>0</R>
        <G>0</G>
        <B>0</B>
      </Color3>
      <float name="Brightness">2</float>
      <bool name="GlobalShadows">true</bool>
      <bool name="Outlines">false</bool>
      <token name="Technology">1</token>
    </Properties>
  </Item>
  <Item class="ReplicatedStorage" referent="1">
    <Properties>
      <string name="Name">ReplicatedStorage</string>
    </Properties>
    <Item class="Folder" referent="2">
      <Properties>
        <string name="Name">Common</string>
      </Properties>
      <Item class="ModuleScript" referent="3">
        <Properties>
          <string name="Name">Hello</string>
          <string name="Source">return function()
	print("Hello, world!")
end</string>
        </Properties>
      </Item>
    </Item>
  </Item>
  <Item class="ServerScriptService" referent="4">
    <Properties>
      <string name="Name">ServerScriptService</string>
    </Properties>
    <Item class="Script" referent="5">
      <Properties>
        <string name="Name">Server</string>
        <token name="RunContext">0</token>
        <string name="Source">if game:IsLoaded() == false then game.Loaded:Wait() end

for i, instance in pairs(game.ServerScriptService::GetDescendants()) do
     if instance.ClassName ~= "ModuleScript" then continue end
     _G[instance.Name] = require(instance)
end

for key, value in pairs(_G) do
    if typeof(value) ~= "table" then continue end
    if value.Initialize == nil then continue end
    value.Initialize()
end

for key, value in pairs(_G) do
    if typeof(value) ~= "table" then continue end
    if value.Initiate == nil then continue end
    value.Initiate()
end</string>
      </Properties>
      <Item class="Folder" referent="6">
        <Properties>
          <string name="Name">Class</string>
        </Properties>
        <Item class="ModuleScript" referent="7">
          <Properties>
            <string name="Name">Class</string>
            <string name="Source"><![CDATA[local module = {}

module.__index = module

module.New = function(value)
	local self = setmetatable({}, module)
	self.value = value
	return self
end

module.Print = function(self)
	print(self.value)
end

return module
]]></string>
          </Properties>
        </Item>
      </Item>
      <Item class="Folder" referent="8">
        <Properties>
          <string name="Name">Scripts</string>
        </Properties>
        <Item class="ModuleScript" referent="9">
          <Properties>
            <string name="Name">ScriptA</string>
            <string name="Source"><![CDATA[local module = {}

print("Script A Loaded")

return module
]]></string>
          </Properties>
        </Item>
        <Item class="ModuleScript" referent="10">
          <Properties>
            <string name="Name">ScriptB</string>
            <string name="Source"><![CDATA[local module = {}

print("Script B Loaded")

return module
]]></string>
          </Properties>
        </Item>
      </Item>
    </Item>
  </Item>
  <Item class="SoundService" referent="11">
    <Properties>
      <string name="Name">SoundService</string>
      <bool name="RespectFilteringEnabled">true</bool>
    </Properties>
  </Item>
  <Item class="StarterPlayer" referent="12">
    <Properties>
      <string name="Name">StarterPlayer</string>
    </Properties>
    <Item class="StarterPlayerScripts" referent="13">
      <Properties>
        <string name="Name">StarterPlayerScripts</string>
      </Properties>
      <Item class="LocalScript" referent="14">
        <Properties>
          <string name="Name">Client</string>
          <string name="Source">for i, instance in pairs(game.ClientScriptService::GetDescendants()) do
	if instance.ClassName ~= "ModuleScript" then continue end
	_G[instance.Name] = require(instance)
end

for key, value in pairs(_G) do
	if typeof(value) ~= "table" then continue end
	if value.Initialize == nil then continue end
	value.Initialize()
end

for key, value in pairs(_G) do
	if typeof(value) ~= "table" then continue end
	if value.Initiate == nil then continue end
	value.Initiate()
end</string>
        </Properties>
      </Item>
    </Item>
  </Item>
  <Item class="Workspace" referent="15">
    <Properties>
      <string name="Name">Workspace</string>
      <bool name="FilteringEnabled">true</bool>
      <bool name="NeedsPivotMigration">false</bool>
    </Properties>
    <Item class="Part" referent="16">
      <Properties>
        <string name="Name">Baseplate</string>
        <bool name="Anchored">true</bool>
        <Color3uint8 name="Color3uint8">6512483</Color3uint8>
        <bool name="Locked">true</bool>
        <Vector3 name="Position">
          <X>0</X>
          <Y>-10</Y>
          <Z>0</Z>
        </Vector3>
        <Vector3 name="size">
          <X>512</X>
          <Y>20</Y>
          <Z>512</Z>
        </Vector3>
      </Properties>
    </Item>
  </Item>
</roblox>